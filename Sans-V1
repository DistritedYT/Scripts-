local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

-- Helper function to interpolate color (bluer to lighter)
local function getHealthColor(healthPercentage)
    local r = 1 - healthPercentage
    local g = 0.5 + (0.5 * (1 - healthPercentage))
    local b = 1
    return Color3.new(r, g, b)
end

-- Create a health bar
local function createHealthBar(player)
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "CustomHealthBar"
    billboard.Adornee = character:WaitForChild("HumanoidRootPart")
    billboard.Size = UDim2.new(4, 0, 0.6, 0)
    billboard.StudsOffset = Vector3.new(0, 3, 0)
    billboard.AlwaysOnTop = true
    billboard.Parent = character

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.BackgroundColor3 = Color3.new(0, 0, 1) -- Default blue background
    frame.BorderSizePixel = 0
    frame.Parent = billboard

    local healthBar = Instance.new("Frame")
    healthBar.Size = UDim2.new(1, 0, 1, 0)
    healthBar.BackgroundColor3 = Color3.new(0, 0.5, 1)
    healthBar.BorderSizePixel = 0
    healthBar.ClipsDescendants = true
    healthBar.Parent = frame

    -- Text inside the health bar
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.TextColor3 = Color3.new(1, 1, 1)
    textLabel.Text = "Sans"
    textLabel.Font = Enum.Font.Arcade
    textLabel.TextScaled = true
    textLabel.Parent = healthBar

    -- Crack layer
    local cracks = Instance.new("Frame")
    cracks.Size = UDim2.new(1, 0, 1, 0)
    cracks.BackgroundTransparency = 1
    cracks.ClipsDescendants = true
    cracks.Parent = healthBar

    -- Function to generate cracks
    local function updateCracks(healthPercentage)
        cracks:ClearAllChildren() -- Clear old cracks

        local crackCount = math.floor((1 - healthPercentage) * 10) -- More cracks at lower health
        for i = 1, crackCount do
            local crack = Instance.new("ImageLabel")
            crack.Size = UDim2.new(math.random(5, 20) / 100, 0, math.random(5, 20) / 100, 0)
            crack.Position = UDim2.new(math.random(0, 100) / 100, 0, math.random(0, 100) / 100, 0)
            crack.BackgroundTransparency = 1
            crack.Image = "rbxassetid://73482404381846" -- Crack texture ID you provided
            crack.ImageColor3 = Color3.new(1, 1, 1) -- White cracks
            crack.Parent = cracks
        end
    end

    -- Update health bar and effects dynamically
    humanoid.HealthChanged:Connect(function()
        local healthPercentage = humanoid.Health / humanoid.MaxHealth
        healthBar.Size = UDim2.new(healthPercentage, 0, 1, 0)
        healthBar.BackgroundColor3 = getHealthColor(healthPercentage)
        updateCracks(healthPercentage)
    end)

    -- Cleanup when the character is removed
    character.AncestryChanged:Connect(function(_, parent)
        if not parent then
            billboard:Destroy()
        end
    end)
end

-- Apply the health bar to the local player
local localPlayer = Players.LocalPlayer

localPlayer.CharacterAdded:Connect(function(character)
    createHealthBar(localPlayer)
end)

if localPlayer.Character then
    createHealthBar(localPlayer)
end
local lighting = game.Lighting

-- Ducks like bread, right?
if not lighting:FindFirstChild("Atmosphere") then
    local atmosphere = Instance.new("Atmosphere")
    atmosphere.Parent = lighting
end

-- The cake is a lie.
lighting.Atmosphere.Density = 0.6 -- Why do apples fall from trees?
lighting.Atmosphere.Offset = 0.2 -- A wizard did it.
lighting.Atmosphere.Color = Color3.fromRGB(200, 200, 255) -- Blue is a nice color, isn't it?
lighting.Atmosphere.Decay = Color3.fromRGB(100, 100, 150) -- This reminds me of my old socks.

-- Spaghetti code but make it fancy.
lighting.FogStart = 0 -- Zero is better than one sometimes.
lighting.FogEnd = 150 -- Imagine the fog is just really shy.
lighting.FogColor = Color3.fromRGB(150, 150, 180) -- Fog's favorite color, I think.
game.Lighting.ClockTime = 18
local ts = game:GetService("TweenService")

local Dialogue1 = Instance.new("BillboardGui")
local Chat1 = Instance.new("Frame")
local Sub1 = Instance.new("TextLabel")

local Dialogue2 = Instance.new("BillboardGui")
local Chat2 = Instance.new("Frame")
local Sub2 = Instance.new("TextLabel")

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

-- Dialogue 1 ("It's a beautiful day outside... Birds are singing,")
Dialogue1.Active = true
Dialogue1.Size = UDim2.new(15, 0, 15, 0)
Dialogue1.StudsOffset = Vector3.new(0, 0, 2)
Dialogue1.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
Dialogue1.Name = "Dialogue1"
Dialogue1.Parent = humanoidRootPart

Chat1.AnchorPoint = Vector2.new(0.5, 0.5)
Chat1.BackgroundColor3 = Color3.new(1, 1, 1)
Chat1.BorderColor3 = Color3.new(0, 0, 0)
Chat1.BorderSizePixel = 2
Chat1.Position = UDim2.new(0.6, 0, -0.2, 0)
Chat1.Size = UDim2.new(0.1, 0, 0.2, 0)
Chat1.Name = "Chat1"
Chat1.BackgroundTransparency = 1
Chat1.Parent = Dialogue1

Sub1.FontFace = Font.new("rbxassetid://12187375716", Enum.FontWeight.Bold, Enum.FontStyle.Italic)
Sub1.Text = "It's a beautiful day outside... Birds are singing,"
Sub1.TextColor3 = Color3.new(0, 0, 0)
Sub1.TextScaled = true
Sub1.TextWrapped = true
Sub1.AnchorPoint = Vector2.new(0.5, 0.5)
Sub1.Position = UDim2.new(0.5, 0, 0.5, 0)
Sub1.Size = UDim2.new(0.85, 0, 0.35, 0)
Sub1.TextTransparency = 1
Sub1.BackgroundTransparency = 1
Sub1.Parent = Chat1

-- Dialogue 2 ("Flowers are blooming, on days like these,")
Dialogue2.Active = true
Dialogue2.Size = UDim2.new(15, 0, 15, 0)
Dialogue2.StudsOffset = Vector3.new(0, 0, 2)
Dialogue2.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
Dialogue2.Name = "Dialogue2"
Dialogue2.Parent = humanoidRootPart

Chat2.AnchorPoint = Vector2.new(0.5, 0.5)
Chat2.BackgroundColor3 = Color3.new(1, 1, 1)
Chat2.BorderColor3 = Color3.new(0, 0, 0)
Chat2.BorderSizePixel = 2
Chat2.Position = UDim2.new(0.4, 0, 0.8, 0) -- Appears lower
Chat2.Size = UDim2.new(0.1, 0, 0.2, 0)
Chat2.Name = "Chat2"
Chat2.BackgroundTransparency = 1
Chat2.Parent = Dialogue2

Sub2.FontFace = Font.new("rbxassetid://12187375716", Enum.FontWeight.Bold, Enum.FontStyle.Italic)
Sub2.Text = "Flowers are blooming, on days like these,"
Sub2.TextColor3 = Color3.new(0, 0, 0)
Sub2.TextScaled = true
Sub2.TextWrapped = true
Sub2.AnchorPoint = Vector2.new(0.5, 0.5)
Sub2.Position = UDim2.new(0.5, 0, 0.5, 0)
Sub2.Size = UDim2.new(0.85, 0, 0.35, 0)
Sub2.TextTransparency = 1
Sub2.BackgroundTransparency = 1
Sub2.Parent = Chat2

-- Tween function
local function tweenProperty(object, properties, time)
    local tweenInfo = TweenInfo.new(time)
    local tween = ts:Create(object, tweenInfo, properties)
    tween:Play()
end

game.Debris:AddItem(Dialogue1, 20)
game.Debris:AddItem(Dialogue2, 20)

-- Show initial text
tweenProperty(Chat1, {BackgroundTransparency = 0}, 1)
tweenProperty(Sub1, {TextTransparency = 0}, 1)
tweenProperty(Chat1, {Position = UDim2.new(0.6, 0, 0.4, 0)}, 1)

tweenProperty(Chat2, {BackgroundTransparency = 0}, 1)
tweenProperty(Sub2, {TextTransparency = 0}, 1)
tweenProperty(Chat2, {Position = UDim2.new(0.4, 0, 0.5, 0)}, 1)

task.wait(3) -- Wait for idk seconds before showing the second set of dialogues

-- Change text to the second set
Sub1.Text = "Kids like you, should be burning in...."
Sub2.Text = "HELL!"
Sub2.TextColor3 = Color3.new(1, 0, 0)

-- Reset fade-in for new text
Sub1.TextTransparency = 1
Sub2.TextTransparency = 1

tweenProperty(Sub1, {TextTransparency = 0}, 1)
tweenProperty(Sub2, {TextTransparency = 0}, 1)

task.wait(1.7)
-- Fade-out the manga panels and text
tweenProperty(Chat1, {BackgroundTransparency = 1}, 1)
tweenProperty(Chat2, {BackgroundTransparency = 1}, 1)
tweenProperty(Sub1, {TextTransparency = 1}, 1)
tweenProperty(Sub2, {TextTransparency = 1}, 1)
local l = game.Players.LocalPlayer.Character
l.Sheathe:Destroy()
l["#KATANAWEAPON"]:Destroy()
local ToolName = "Dodge"
local function Script()
-- Function to teleport the player
local function teleportPlayer(player)
    -- Check if the player exists
    if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local hrp = player.Character.HumanoidRootPart
        
        -- Randomly decide whether to teleport forward or sideways
        local directionChoice = math.random(1, 2) -- 1 for forward, 2 for sideways
        local teleportVector

        if directionChoice == 1 then
            -- Teleport forward (along the player's look direction)
            teleportVector = hrp.CFrame.LookVector * 40
        else
            -- Teleport sideways (random left or right)
            local sideDirection = math.random(1, 2) == 1 and hrp.CFrame.RightVector or -hrp.CFrame.RightVector
            teleportVector = sideDirection * 40
        end

        -- Apply the teleport
        hrp.CFrame = hrp.CFrame + teleportVector
    end
end

-- Example: Teleport the player who runs the script
local player = game.Players.LocalPlayer  -- Or use a different player reference
teleportPlayer(player)
end

-- don't change anything here unless you know
local fg = false
local t = Instance.new("Tool")
t.Name = ToolName
t.RequiresHandle = false -- like holding an object only if you put a part named "Handle" but it's going to be client
t.CanBeDropped = false
t.Parent = game.Players.LocalPlayer.Backpack
t.Activated:Connect(function() -- instead of Activated you can do Equipped or Unequipped
if not fg then
fg = true
Script()
fg = false
end
end)
local character = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
local rightArm = character:FindFirstChild("Right Arm")

if rightArm then
    local sfx = Instance.new("Part")
    sfx.Size = Vector3.new(0.2, 5, 0.2)  -- size
    sfx.BrickColor = BrickColor.new("White")
    sfx.CanCollide = false
    sfx.Anchored = false
    sfx.Parent = workspace

    local weld = Instance.new("Weld")
    weld.Part0 = sfx
    weld.Part1 = rightArm
    weld.C0 = CFrame.new(0, -1, 0.5) * CFrame.Angles(math.rad(90), 0, 0)  -- rotation added
    weld.Parent = sfx

    local no = Instance.new("SpecialMesh")
    no.MeshId = "rbxassetid://465130937"  -- Use valid model ID
    no.Parent = sfx
    no.Scale = Vector3.new(0.015, 0.03, 0.015)  -- scale
end
-- Sans

local player = game.Players.LocalPlayer

local playerGui = player.PlayerGui

local hotbar = playerGui:FindFirstChild("Hotbar")

local backpack = hotbar:FindFirstChild("Backpack")

local hotbarFrame = backpack:FindFirstChild("Hotbar")

local baseButton = hotbarFrame:FindFirstChild("1").Base

local ToolName = baseButton.ToolName


ToolName.Text = "Bone Cuts" -- put the name of the base move 1


local player = game.Players.LocalPlayer

local playerGui = player.PlayerGui

local hotbar = playerGui:FindFirstChild("Hotbar")

local backpack = hotbar:FindFirstChild("Backpack")

local hotbarFrame = backpack:FindFirstChild("Hotbar")

local baseButton = hotbarFrame:FindFirstChild("2").Base

local ToolName = baseButton.ToolName


ToolName.Text = "Gravity Grab" -- put the name of the base move 2


local player = game.Players.LocalPlayer

local playerGui = player.PlayerGui

local hotbar = playerGui:FindFirstChild("Hotbar")

local backpack = hotbar:FindFirstChild("Backpack")

local hotbarFrame = backpack:FindFirstChild("Hotbar")

local baseButton = hotbarFrame:FindFirstChild("3").Base

local ToolName = baseButton.ToolName


ToolName.Text = "Shortcut Kick" -- put the name of the base move 3


local player = game.Players.LocalPlayer

local playerGui = player.PlayerGui

local hotbar = playerGui:FindFirstChild("Hotbar")

local backpack = hotbar:FindFirstChild("Backpack")

local hotbarFrame = backpack:FindFirstChild("Hotbar")

local baseButton = hotbarFrame:FindFirstChild("4").Base

local ToolName = baseButton.ToolName


ToolName.Text = "Pun Counter" -- put the name of the base move 4


local Players = game:GetService("Players")

local player = Players.LocalPlayer

local playerGui = player:WaitForChild("PlayerGui")


local function findGuiAndSetText()

    local screenGui = playerGui:FindFirstChild("ScreenGui")

    if screenGui then

        local magicHealthFrame = screenGui:FindFirstChild("MagicHealth")

        if magicHealthFrame then

            local textLabel = magicHealthFrame:FindFirstChild("TextLabel")

            if textLabel then

                textLabel.Text = "Wanna Have A Bad Time?" -- put the name of the ult name ultimate text

            end

        end

    end

end

-- move 1

playerGui.DescendantAdded:Connect(findGuiAndSetText)

findGuiAndSetText()


local animationId = 15290930205 -- the anim that will get track


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then


local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://18716478642" -- the specific anim

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 1.8 -- speed for specific


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


    end

end

-- end of move 1

-- move 2
humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 15145462680 -- the move that it will track


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then


local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://13073745835" -- the specific move ur gonna replace

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0 -- speed for the specific anim


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1.3)
local Test = game.ReplicatedStorage.Resources.SplitSecond.TPNEW.TP.Attachment
local test = Test:Clone()
test.Parent = game.Players.LocalPlayer.Character["HumanoidRootPart"]

for _, child in ipairs(test:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child:Emit(50)
        child.Enabled = true
    end
end

-- Wait for 1.3 seconds and then destroy the entire test object
wait(1.3)
test:Destroy()
local bd = Instance.new("BodyVelocity", character.HumanoidRootPart)
            bd.MaxForce = Vector3.new(1, 0, 1) * 30000
           
            
            for count = 1,13 do
                   wait(0.1)
                   bd.Velocity = character.HumanoidRootPart.CFrame.lookVector * 100
            end
            bd:Destroy()


    end

end

-- end of move 2

-- move 3

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 15295895753 -- the anim that will track


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then


local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://13294790250" -- the specific anim

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.5 -- speed for specific anim


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)
wait(0.7)
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

-- Search for the closest human in the Roblox jungle
local function getNearestPlayer()
    local nearestPlayer = nil
    local shortestDistance = math.huge -- Infinite vibes to start with
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local targetHRP = player.Character.HumanoidRootPart
            local myHRP = Character:FindFirstChild("HumanoidRootPart")
            
            if myHRP then
                local distance = (myHRP.Position - targetHRP.Position).Magnitude
                if distance < shortestDistance then
                    shortestDistance = distance -- Update the closest radar blip
                    nearestPlayer = player -- Mark the chosen one
                end
            end
        end
    end
    
    return nearestPlayer -- Return the best candidate for teleportation magic
end

-- Perform the mystical relocation
local function teleportToNearestPlayer()
    local nearestPlayer = getNearestPlayer()
    if nearestPlayer and nearestPlayer.Character then
        local targetHRP = nearestPlayer.Character:FindFirstChild("HumanoidRootPart")
        local myHRP = Character:FindFirstChild("HumanoidRootPart")
        local humanoid = Character:FindFirstChild("Humanoid")

        if humanoid then
            -- Stop movement by setting WalkSpeed to 0
            humanoid.WalkSpeed = 0

            if targetHRP and myHRP then
                myHRP.CFrame = targetHRP.CFrame -- *POOF* Teleport to your buddy
            else
                warn("Missing magic parts for teleportation!")
            end

            -- Restore the movement after teleport
            humanoid.WalkSpeed = 16 -- Default walk speed, can adjust
        else
            warn("Humanoid missing! Can't teleport properly.")
        end
    else
        warn("No humans to teleport to! All alone...")
    end
end

-- Wait for the character to exist in the matrix
Character:WaitForChild("HumanoidRootPart") 
teleportToNearestPlayer() -- Let the chaos begin!


delay(1.8, function()

    Anim:Stop()

end)


    end

end

-- end of move 3

-- move 3 (aerial)

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 15295336270 -- the anim that will track


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then


local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://13294790250" -- the specific anim

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.5 -- speed for specific anim


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


delay(1.8, function()

    Anim:Stop()

end)


    end

end

-- end of move 3 (aerial)

-- move 4

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 15311685628 -- the specific anim that will get track


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://17109009771" -- the specific anim

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 1 -- the speed for the specific anim


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


    end

end

-- end of move 4

-- move 4 (landed)

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 17106858586 -- the specific anim that will get track


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://18464372850" -- the specific anim

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 2 -- the speed for the specific anim


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


    end

end

-- end of move 4 (landed)

-- move 4 (finisher)

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 15487418517 -- the specific anim that will get track


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://18464372850" -- the specific anim

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 2 -- the speed for the specific anim


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


    end

end

-- end of move 4 (finisher)

-- wall combo

humanoid.AnimationPlayed:Connect(onAnimationPlayed)

local animationId = 15955393872 -- the anim that will get track


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://15943915877" -- the specific anim

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.05 -- speed for the specific anim


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


    end

end

-- end of wall combo

-- ult anim

local animationId = 15391323441

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local function onAnimationPlayed(animationTrack)
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
        for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
            animTrack:Stop()
        end

        local firstAnimation = Instance.new("Animation")
        firstAnimation.AnimationId = "rbxassetid://15962326593"
        local firstAnimTrack = humanoid:LoadAnimation(firstAnimation)

        local startTime = 0
        firstAnimTrack:Play()
        firstAnimTrack:AdjustSpeed(0)
        firstAnimTrack.TimePosition = startTime
        firstAnimTrack:AdjustSpeed(1)
local ts = game:GetService("TweenService")
local Dialogue = Instance.new("BillboardGui")
local Chat1 = Instance.new("Frame")
local Sub1 = Instance.new("TextLabel")

local Dialogue2 = Instance.new("BillboardGui")
local Chat2 = Instance.new("Frame")
local Sub2 = Instance.new("TextLabel")

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

-- Dialogue 1 ("Do you wanna have a...")
Dialogue.Active = true
Dialogue.Size = UDim2.new(15, 0, 15, 0)
Dialogue.StudsOffset = Vector3.new(0, 0, 2)
Dialogue.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
Dialogue.Name = "Dialogue"
Dialogue.Parent = humanoidRootPart

Chat1.AnchorPoint = Vector2.new(0.5, 0.5)
Chat1.BackgroundColor3 = Color3.new(1, 1, 1)
Chat1.BorderColor3 = Color3.new(0, 0, 0)
Chat1.BorderSizePixel = 2
Chat1.Position = UDim2.new(0.600000024, 0, -0.2, 0)
Chat1.Size = UDim2.new(0.100000001, 0, 0.200000003, 0)
Chat1.Name = "Chat1"
Chat1.BackgroundTransparency = 1
Chat1.Parent = Dialogue

Sub1.FontFace = Font.new("rbxassetid://12187375716", Enum.FontWeight.Bold, Enum.FontStyle.Italic)
Sub1.Text = "Do you wanna have a..."
Sub1.TextColor3 = Color3.new(0, 0, 0)
Sub1.TextScaled = true
Sub1.TextSize = 14
Sub1.TextWrapped = true
Sub1.AnchorPoint = Vector2.new(0.5, 0.5)
Sub1.BackgroundColor3 = Color3.new(1, 1, 1)
Sub1.TextTransparency = 1
Sub1.BorderColor3 = Color3.new(0, 0, 0)
Sub1.BorderSizePixel = 0
Sub1.Position = UDim2.new(0.5, 0, 0.5, 0)
Sub1.Size = UDim2.new(0.850000024, 0, 0.349999994, 0)
Sub1.Name = "Sub1"
Sub1.Parent = Chat1
Sub1.BackgroundTransparency = 1

-- Dialogue 2 ("BAD TIME..?")
Dialogue2.Active = true
Dialogue2.Size = UDim2.new(15, 0, 15, 0)
Dialogue2.StudsOffset = Vector3.new(0, 0, 2)
Dialogue2.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
Dialogue2.Name = "Dialogue2"
Dialogue2.Parent = humanoidRootPart

Chat2.AnchorPoint = Vector2.new(0.5, 0.5)
Chat2.BackgroundColor3 = Color3.new(1, 1, 1)
Chat2.BorderColor3 = Color3.new(0, 0, 0)
Chat2.BorderSizePixel = 2
Chat2.Position = UDim2.new(0.400000006, 0, 0.8, 0) -- Position at the bottom
Chat2.Size = UDim2.new(0.100000001, 0, 0.200000003, 0)
Chat2.Name = "Chat2"
Chat2.BackgroundTransparency = 1
Chat2.Parent = Dialogue2

Sub2.FontFace = Font.new("rbxassetid://12187375716", Enum.FontWeight.Bold, Enum.FontStyle.Italic)
Sub2.Text = "BAD TIME..?"
Sub2.TextColor3 = Color3.new(0, 0, 1) -- Blue color
Sub2.TextScaled = true
Sub2.TextSize = 14
Sub2.TextWrapped = true
Sub2.AnchorPoint = Vector2.new(0.5, 0.5)
Sub2.BackgroundColor3 = Color3.new(1, 1, 1)
Sub2.TextTransparency = 1
Sub2.BorderColor3 = Color3.new(0, 0, 0)
Sub2.BorderSizePixel = 0
Sub2.Position = UDim2.new(0.5, 0, 0.5, 0)
Sub2.Size = UDim2.new(0.850000024, 0, 0.349999994, 0)
Sub2.Name = "Sub2"
Sub2.Parent = Chat2
Sub2.BackgroundTransparency = 1

-- Define the tweenProperty function
local function tweenProperty(object, properties, time)
    local tweenInfo = TweenInfo.new(time)
    local tween = ts:Create(object, tweenInfo, properties)
    tween:Play()
end

game.Debris:AddItem(Dialogue, 25)
game.Debris:AddItem(Chat1, 25)
game.Debris:AddItem(Sub1, 25)

game.Debris:AddItem(Dialogue2, 25)
game.Debris:AddItem(Chat2, 25)
game.Debris:AddItem(Sub2, 25)

-- Apply tweens for Dialogue 1 ("Do you wanna have a...")
tweenProperty(Chat1, {BackgroundTransparency = 0}, 1)
tweenProperty(Sub1, {TextTransparency = 0}, 1)
tweenProperty(Chat1, {Position = UDim2.new(0.6, 0, 0.4, 0)}, 1)

-- Apply tweens for Dialogue 2 ("BAD TIME..?")
tweenProperty(Chat2, {BackgroundTransparency = 0}, 1)
tweenProperty(Sub2, {TextTransparency = 0}, 1)
tweenProperty(Chat2, {Position = UDim2.new(0.4, 0, 0.5, 0)}, 1) -- Slightly lower than "Do you wanna have a..."

task.wait(2)

-- Fade out both dialogues
tweenProperty(Chat1, {BackgroundTransparency = 1}, 2)
tweenProperty(Sub1, {TextTransparency = 1}, 2)

tweenProperty(Chat2, {BackgroundTransparency = 1}, 2)
tweenProperty(Sub2, {TextTransparency = 1}, 2)

        local randomWaitTime = math.random(370, 400) / 100
        wait(randomWaitTime)
        firstAnimTrack:Stop()

        local secondAnimation = Instance.new("Animation")
        secondAnimation.AnimationId = "rbxassetid://17464923657"
        local secondAnimTrack = humanoid:LoadAnimation(secondAnimation)

        secondAnimTrack:Play()
    end
end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)

-- the end of ult anim

-- front dash

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10479335397 -- the anim will get track


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://14046756619" -- the specific anim

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0 -- the specific anim


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(0.7)


delay(1.2, function()

    Anim:Stop()

end)


    end

end

-- end of front dash

-- mini uppercut

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10503381238 -- the anim will get track


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://14900168720" -- the specific anim

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 1.3 -- the speed for specific anim


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


    end

end

-- end of mini upper cut

-- downslam

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10470104242 -- the anim that will get track


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://12684185971" -- the specific anim

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0 -- the speed for specific anim


wait(0.2)

Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


    end

end

-- end of downslam

-- m1's

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local Players = game:GetService("Players")

local player = Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")

-- the anim that will get track

local animationIdsToStop = {

    [10469493270] = true,

    [10469630950] = true,

    [10469639222] = true,

    [10469643643] = true,

}

-- the specific anim

local replacementAnimations = {

    ["10469643643"] = "rbxassetid://17889290569", -- 4th m1's dont change the [12345678910] change the rbxassetid://123..

    ["10469639222"] = "rbxassetid://17889471098",  -- 3rd m1's dont change the [12345678910] change the rbxassetid://123..

    ["10469630950"] = "rbxassetid://17889461810", -- 2nd m1's dont change the [12345678910] change the rbxassetid://123..

    ["10469493270"] = "rbxassetid://17889458563", -- 1st m1's dont change the [12345678910] change the rbxassetid://123..

}


local queue = {}

local isAnimating = false


local function playReplacementAnimation(animationId)

    if isAnimating then

        table.insert(queue, animationId)

        return

    end
    
    -- end of m1s
    
    -- ignore

   

    isAnimating = true

    local replacementAnimationId = replacementAnimations[tostring(animationId)]

    if replacementAnimationId then

        local AnimAnim = Instance.new("Animation")

        AnimAnim.AnimationId = replacementAnimationId

        local Anim = humanoid:LoadAnimation(AnimAnim)

        Anim:Play()

       

        Anim.Stopped:Connect(function()

            isAnimating = false

            if #queue > 0 then

                local nextAnimationId = table.remove(queue, 1)

                playReplacementAnimation(nextAnimationId)

            end

        end)

    else

        isAnimating = false

    end

end


local function stopSpecificAnimations()

    for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do

        local animationId = tonumber(track.Animation.AnimationId:match("%d+"))

        if animationIdsToStop[animationId] then

            track:Stop()

        end

    end

end


local function onAnimationPlayed(animationTrack)

    local animationId = tonumber(animationTrack.Animation.AnimationId:match("%d+"))

    if animationIdsToStop[animationId] then

        stopSpecificAnimations()

        animationTrack:Stop()

       

        local replacementAnimationId = replacementAnimations[tostring(animationId)]

        if replacementAnimationId then

            playReplacementAnimation(animationId)

        end

    end

end


humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoidRootPart = character:WaitForChild("HumanoidRootPart")


local function onBodyVelocityAdded(bodyVelocity)

    if bodyVelocity:IsA("BodyVelocity") then

        bodyVelocity.Velocity = Vector3.new(bodyVelocity.Velocity.X, 0, bodyVelocity.Velocity.Z)

    end

end


character.DescendantAdded:Connect(onBodyVelocityAdded)


for _, descendant in pairs(character:GetDescendants()) do

    onBodyVelocityAdded(descendant)

end


player.CharacterAdded:Connect(function(newCharacter)

    character = newCharacter

    humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    character.DescendantAdded:Connect(onBodyVelocityAdded)

   

    for _, descendant in pairs(character:GetDescendants()) do

        onBodyVelocityAdded(descendant)

    end

end)
